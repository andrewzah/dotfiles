#!/usr/bin/env bash

set -exo pipefail

#####################
### FUNCTION DEFS ###
#####################

get_latest_release() {
curl --silent "https://api.github.com/repos/$1/releases/latest" \
  | grep '"tag_name":' \
  | sed -E 's/.*"([^"]+)".*/\1/'
}

############
### VARS ###
############

CONFIG_DIR="$HOME/.config"
BASE_DOTFILES_DIR="$HOME/.dotfiles"
LINUXFILES_DIR="$BASE_DOTFILES_DIR/linux"

###################################
### Symlink files + create dirs ###
###################################

mkdir -p "$HOME/sync/general/personal"
mkdir -p "$HOME/programming"
mkdir -p "$HOME/work"

if [ ! -d "$BASE_DOTFILES_DIR" ]; then
  git clone 'https://git.andrewzah.com/andrewzah/dotfiles.git' "$BASE_DOTFILES_DIR" \
    || git clone 'https://github.com/andrewzah/dotfiles.git' "$BASE_DOTFILES_DIR"

  touch "$LINUXFILES_DIR/debian/zsh/secret-exports.zsh"

  # shell history
  histfile="$HOME/sync/general/personal/.shell-history.$(hostname)"
  touch "$histfile"
  ln -s "$histfile" "~/.histfile"

  cd $BASE_DOTFILES_DIR
  git remote remove origin
  git remote add gh 'git@github.com:andrewzah/dotfiles.git'
  git remote add zah 'git@git.andrewzah.com:andrewzah/dotfiles.git'
fi

if [ ! -l "$HOME/.zshrc" ]; then
  ln -s "$LINUXFILES_DIR/.zshrc" "$HOME/.zshrc"
fi

if [ ! -l "$HOME/.gitconfig" ]; then
  ln -s "$LINUXFILES_DIR/.gitconfig" "$HOME/.gitconfig"
fi

if [ ! -l "$HOME/.xinitrc" ]; then
  ln -s "$LINUXFILES_DIR/.xinitrc" "$HOME/.xinitrc"
fi

if [ ! -l "$HOME/.Xresources" ]; then
  ln -s "$LINUXFILES_DIR/.Xresources" "$HOME/.Xresources"
fi

if [ ! -l "$HOME/.Xmodmap" ]; then
  ln -s "$LINUXFILES_DIR/.Xmodmap" "$HOME/.Xmodmap"
fi

if [ ! -l "$HOME/.gemrc" ]; then
  ln -s "$LINUXFILES_DIR/.gemrc" "$HOME/.gemrc"
fi

mkdir -p "$CONFIG_DIR/i3"
mkdir -p "$CONFIG_DIR/nvim"
mkdir -p "$CONFIG_DIR/polybar"

if [ -d "$CONFIG_DIR/i3" ]; then
  rm -r "$CONFIG_DIR/i3"
fi
ln -s "$LINUXFILES_DIR/config/i3" "$CONFIG_DIR/i3"

if [ ! -f "$CONFIG_DIR/nvim/init.vim" ]; then
  ln -s "$LINUXFILES_DIR/config/nvim/init.vim" "$CONFIG_DIR/nvim/init.vim"
  sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  #nvim -c ":Silent ':PlugInstall'"
fi

#########################
### Install utilities ###
#########################

if [ ! -s "/usr/local/bin/lock" ]; then
  sudo ln -s "$DOTFILES_DIR/bin/lock" "/usr/local/bin/lock"
fi

if [ ! -f "$HOME/.cargo/bin/rustc" ]; then
  curl https://sh.rustup.rs -sSf | sh -s -- -y
fi
export PATH="$HOME/.cargo/bin:$PATH"

if [ -n "$FULL_INSTALL" ]; then
  if [ ! -d "/usr/local/go" ]; then
    if [ ! -d "$HOME/.go" ]; then
      mkdir -p "$HOME/.go/src/github.com/andrewzah" 
    fi

    go_ver="1.17.1"
    curl -L "https://dl.google.com/go/go${go_ver}.linux-amd64.tar.gz" -o /tmp/go.tar.gz
    sudo tar xvfz /tmp/go.tar.gz -C /usr/local
  fi

  if [ ! -f "/usr/local/bin/docker-compose" ]; then
    sudo curl -L "https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  fi

  if [ ! -d "$HOME/.nvm" ]; then
    git clone 'https://github.com/nvm-sh/nvm.git' "$HOME/.nvm"
    source "$HOME/.nvm/nvm.sh" && nvm install --latest-npm
  fi

  if [ ! -d "$HOME/.rbenv" ]; then
    git clone 'https://github.com/rbenv/rbenv.git' "$HOME/.rbenv"

    mkdir -p "$HOME/.rbenv/plugins"
    git clone 'https://github.com/rbenv/ruby-build.git' "$HOME/.rbenv/plugins/ruby-build"
  fi
fi

if [ ! -f "$HOME/.cargo/bin/as-tree" ]; then
  cargo install -f --git https://github.com/jez/as-tree
fi

if [ ! -f "$HOME/.cargo/bin/delta" ]; then
  cargo install -f git-delta
fi

if [ ! -f "$HOME/.cargo/bin/just" ]; then
  cargo install -f just
fi

if [ ! -f "$HOME/.cargo/bin/bat" ]; then
  cargo install -f bat
fi

if [ ! -f "$HOME/.cargo/bin/dust" ]; then
  cargo install -f hyperfine
fi

if [ ! -f "$HOME/.cargo/bin/fd" ]; then
  cargo install -f fd-find
fi

if [ ! -f "/usr/local/bin/hadolint" ]; then
  ver=$(get_latest_release hadolint/hadolint)
  url="https://github.com/hadolint/hadolint/releases/download/$ver/hadolint-Linux-x86_64"
  sudo curl -L "$url" -o /usr/local/bin/hadolint
  sudo chmod +x /usr/local/bin/hadolint
fi

##############
### FINISH ###
##############

echo "complete!"
echo "Don't forget to symlink which polybar-config you want to use..."
